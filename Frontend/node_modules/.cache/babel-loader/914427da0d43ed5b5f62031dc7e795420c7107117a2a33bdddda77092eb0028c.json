{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"UserReportSummary\",\n  data() {\n    return {\n      reports: [],\n      loading: true,\n      error: null\n    };\n  },\n  mounted() {\n    this.fetchUserReports();\n  },\n  methods: {\n    async fetchUserReports() {\n      this.loading = true;\n      try {\n        // Get user email from localStorage\n        const userEmail = localStorage.getItem('userEmail') || 'test@gmail.com';\n        const response = await axios.get(`http://localhost:3000/api/user-reports?email=${userEmail}`);\n        this.reports = response.data;\n      } catch (error) {\n        console.error('Error fetching user reports:', error);\n        this.error = 'Failed to load your reports. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDateTime(dateTime) {\n      if (!dateTime) return 'Date not specified';\n      return new Date(dateTime).toLocaleString();\n    },\n    getStatusClass(status) {\n      const statusClasses = {\n        'Pending': 'status-pending',\n        'Under Review': 'status-review',\n        'In Progress': 'status-progress',\n        'Solved': 'status-solved',\n        'False Alarm': 'status-false',\n        'Investigation': 'status-investigation',\n        'External': 'status-external'\n      };\n      return statusClasses[status] || 'status-pending';\n    },\n    getResponseTimeLabel(responseTime) {\n      const labels = {\n        'now': 'Immediate',\n        'later': 'Within 24 hours',\n        'emergency': 'Emergency response'\n      };\n      return labels[responseTime] || responseTime;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","reports","loading","error","mounted","fetchUserReports","methods","userEmail","localStorage","getItem","response","get","console","formatDateTime","dateTime","Date","toLocaleString","getStatusClass","status","statusClasses","getResponseTimeLabel","responseTime","labels"],"sources":["C:\\Users\\sifis\\OneDrive\\Documents\\Project 3\\Crime-Reporting-Web-Application\\Frontend\\src\\components\\UserReportSummary.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-reports-component\">\r\n    <h1>Your Crime Reports</h1>\r\n    <div v-if=\"loading\" class=\"loading\">Loading your reports...</div>\r\n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-else>\r\n      <div v-if=\"reports.length\" class=\"cards-container\">\r\n        <div class=\"report-card\" v-for=\"report in reports\" :key=\"report.id\">\r\n          <div class=\"card-header\">\r\n            <h2>{{ report.incidentType }}</h2>\r\n            <span class=\"badge\" :class=\"getStatusClass(report.status)\">{{ report.status || 'Pending' }}</span>\r\n          </div>\r\n          <div class=\"meta-data\">\r\n            <span class=\"date\">{{ formatDateTime(report.dateTime) }}</span>\r\n            <span class=\"divider\">‚Ä¢</span>\r\n            <span class=\"severity\">Severity: {{ report.severity }}</span>\r\n          </div>\r\n          \r\n          <p class=\"description\">{{ report.description }}</p>\r\n          <p class=\"location\">üìç {{ report.location }}</p>\r\n          <p class=\"response-time\">Response: {{ getResponseTimeLabel(report.responseTime) }}</p>\r\n          \r\n          <div class=\"report-meta\">\r\n            <span class=\"anonymous\" v-if=\"report.anonymous\">Submitted anonymously</span>\r\n            <span class=\"follow-up\" v-if=\"report.followUp\">Follow-up requested</span>\r\n          </div>\r\n          \r\n          <div class=\"report-id\">Report ID: {{ report.id }}</div>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"no-reports\">\r\n        <p>You haven't submitted any reports yet.</p>\r\n        <router-link to=\"/reporting\" class=\"report-link\">Submit your first report</router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"UserReportSummary\",\r\n  data() {\r\n    return {\r\n      reports: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserReports();\r\n  },\r\n  methods: {\r\n    async fetchUserReports() {\r\n      this.loading = true;\r\n      try {\r\n        // Get user email from localStorage\r\n        const userEmail = localStorage.getItem('userEmail') || 'test@gmail.com';\r\n        \r\n        const response = await axios.get(`http://localhost:3000/api/user-reports?email=${userEmail}`);\r\n        this.reports = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching user reports:', error);\r\n        this.error = 'Failed to load your reports. Please try again later.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    formatDateTime(dateTime) {\r\n      if (!dateTime) return 'Date not specified';\r\n      return new Date(dateTime).toLocaleString();\r\n    },\r\n    \r\n    getStatusClass(status) {\r\n      const statusClasses = {\r\n        'Pending': 'status-pending',\r\n        'Under Review': 'status-review',\r\n        'In Progress': 'status-progress',\r\n        'Solved': 'status-solved',\r\n        'False Alarm': 'status-false',\r\n        'Investigation': 'status-investigation',\r\n        'External': 'status-external'\r\n      };\r\n      return statusClasses[status] || 'status-pending';\r\n    },\r\n    \r\n    getResponseTimeLabel(responseTime) {\r\n      const labels = {\r\n        'now': 'Immediate',\r\n        'later': 'Within 24 hours',\r\n        'emergency': 'Emergency response'\r\n      };\r\n      return labels[responseTime] || responseTime;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-reports-component {\r\n  font-family: Arial, sans-serif;\r\n  padding: 2rem;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.error {\r\n  color: #e74c3c;\r\n}\r\n\r\n.cards-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n  gap: 1.8rem;\r\n}\r\n\r\n.report-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  transition: all 0.25s ease;\r\n  padding: 1.8rem;\r\n  border: 1px solid #eaeaea;\r\n}\r\n\r\n.report-card:hover {\r\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n  transform: translateY(-3px);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.card-header h2 {\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  color: #1a1a1a;\r\n  margin: 0;\r\n}\r\n\r\n.badge {\r\n  font-size: 0.8rem;\r\n  padding: 0.4rem 0.8rem;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.status-pending {\r\n  background: #fff3cd;\r\n  color: #856404;\r\n}\r\n\r\n.status-review {\r\n  background: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.status-progress {\r\n  background: #d1ecf1;\r\n  color: #0c5460;\r\n}\r\n\r\n.status-solved {\r\n  background: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.status-false {\r\n  background: #f8d7da;\r\n  color: #721c24;\r\n}\r\n\r\n.status-investigation {\r\n  background: #fff3cd;\r\n  color: #856404;\r\n}\r\n\r\n.status-external {\r\n  background: #e2e3e5;\r\n  color: #383d41;\r\n}\r\n\r\n.meta-data {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 0.85rem;\r\n  color: #666;\r\n  margin-bottom: 1rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.divider {\r\n  color: #ccc;\r\n}\r\n\r\n.description {\r\n  color: #555;\r\n  line-height: 1.5;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.location, .response-time {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.8rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.report-meta {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.anonymous, .follow-up {\r\n  padding: 0.3rem 0.6rem;\r\n  border-radius: 12px;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.anonymous {\r\n  background: #f0f0f0;\r\n  color: #666;\r\n}\r\n\r\n.follow-up {\r\n  background: #e8f5e8;\r\n  color: #2e7d32;\r\n}\r\n\r\n.report-id {\r\n  font-size: 0.8rem;\r\n  color: #999;\r\n  text-align: right;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.no-reports {\r\n  text-align: center;\r\n  padding: 3rem;\r\n  color: #666;\r\n}\r\n\r\n.report-link {\r\n  display: inline-block;\r\n  margin-top: 1rem;\r\n  padding: 0.8rem 1.5rem;\r\n  background: #4f46e5;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 8px;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.report-link:hover {\r\n  background: #4338ca;\r\n}\r\n</style>\r\n"],"mappings":"AAuCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI,CAACH,OAAM,GAAI,IAAI;MACnB,IAAI;QACF;QACA,MAAMK,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,KAAK,gBAAgB;QAEvE,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,gDAAgDJ,SAAS,EAAE,CAAC;QAC7F,IAAI,CAACN,OAAM,GAAIS,QAAQ,CAACV,IAAI;MAC9B,EAAE,OAAOG,KAAK,EAAE;QACdS,OAAO,CAACT,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAACA,KAAI,GAAI,sDAAsD;MACrE,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEDW,cAAcA,CAACC,QAAQ,EAAE;MACvB,IAAI,CAACA,QAAQ,EAAE,OAAO,oBAAoB;MAC1C,OAAO,IAAIC,IAAI,CAACD,QAAQ,CAAC,CAACE,cAAc,CAAC,CAAC;IAC5C,CAAC;IAEDC,cAAcA,CAACC,MAAM,EAAE;MACrB,MAAMC,aAAY,GAAI;QACpB,SAAS,EAAE,gBAAgB;QAC3B,cAAc,EAAE,eAAe;QAC/B,aAAa,EAAE,iBAAiB;QAChC,QAAQ,EAAE,eAAe;QACzB,aAAa,EAAE,cAAc;QAC7B,eAAe,EAAE,sBAAsB;QACvC,UAAU,EAAE;MACd,CAAC;MACD,OAAOA,aAAa,CAACD,MAAM,KAAK,gBAAgB;IAClD,CAAC;IAEDE,oBAAoBA,CAACC,YAAY,EAAE;MACjC,MAAMC,MAAK,GAAI;QACb,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,iBAAiB;QAC1B,WAAW,EAAE;MACf,CAAC;MACD,OAAOA,MAAM,CAACD,YAAY,KAAKA,YAAY;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}