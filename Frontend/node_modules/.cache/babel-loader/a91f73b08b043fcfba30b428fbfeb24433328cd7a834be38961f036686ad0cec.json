{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'RegisterView',\n  data() {\n    return {\n      step: 1,\n      form: {\n        fullName: '',\n        idNumber: '',\n        email: '',\n        password: '',\n        phone: '',\n        address: '',\n        city: '',\n        houseNumber: '',\n        province: '',\n        notes: '',\n        timestamp: new Date().toLocaleString()\n      }\n    };\n  },\n  computed: {\n    isFormComplete() {\n      return this.form.fullName && this.form.idNumber && this.form.email && this.form.password && this.form.phone && this.form.address && this.form.city && this.form.houseNumber && this.form.province;\n    },\n    stepOneFields() {\n      return [{\n        id: 'fullName',\n        label: 'Full Name',\n        type: 'text',\n        required: true\n      }, {\n        id: 'idNumber',\n        label: 'ID Number',\n        type: 'text',\n        required: true\n      }, {\n        id: 'email',\n        label: 'Email Address',\n        type: 'email',\n        required: true\n      }, {\n        id: 'password',\n        label: 'Password',\n        type: 'password',\n        required: true\n      }, {\n        id: 'confirmPassword',\n        label: 'Confirm Passowrd',\n        type: 'password',\n        required: true\n      }];\n    },\n    stepTwoFields() {\n      return [{\n        id: 'phone',\n        label: 'Primary Phone Number',\n        type: 'tel',\n        required: true\n      }, {\n        id: 'address',\n        label: 'Street Address',\n        type: 'text',\n        required: true\n      }, {\n        id: 'city',\n        label: 'City/Town',\n        type: 'text',\n        required: true\n      }, {\n        id: 'houseNumber',\n        label: 'House Number',\n        type: 'text',\n        required: true\n      }, {\n        id: 'province',\n        label: 'Province',\n        type: 'text',\n        required: true\n      }];\n    }\n  },\n  methods: {\n    nextStep() {\n      if (this.step < 3) this.step++;\n    },\n    prevStep() {\n      if (this.step > 1) this.step--;\n    },\n    handleRegister() {\n      if (!this.isFormComplete) {\n        alert('Please fill all required fields.');\n        return;\n      }\n      alert(`Registration complete for ${this.form.fullName}!`);\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","step","form","fullName","idNumber","email","password","phone","address","city","houseNumber","province","notes","timestamp","Date","toLocaleString","computed","isFormComplete","stepOneFields","id","label","type","required","stepTwoFields","methods","nextStep","prevStep","handleRegister","alert","$router","push"],"sources":["C:\\Users\\sifis\\OneDrive\\Documents\\Project 3\\Crime-Reporting-Web-Application\\Frontend\\src\\pages\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <div class=\"form-section\">\r\n      <div class=\"form-box\">\r\n        <h2>Register</h2>\r\n        <p>Step {{ step }} of 3</p>\r\n\r\n        <form @submit.prevent=\"handleRegister\">\r\n          <div v-if=\"step === 1\">\r\n            <div class=\"input-group\" v-for=\"field in stepOneFields\" :key=\"field.id\">\r\n              <label :for=\"field.id\">{{ field.label }}</label>\r\n              <input\r\n                :id=\"field.id\"\r\n                v-model=\"form[field.id]\"\r\n                :type=\"field.type\"\r\n                :required=\"field.required\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div v-if=\"step === 2\">\r\n            <div class=\"input-group\" v-for=\"field in stepTwoFields\" :key=\"field.id\">\r\n              <label :for=\"field.id\">{{ field.label }}</label>\r\n              <input\r\n                :id=\"field.id\"\r\n                v-model=\"form[field.id]\"\r\n                :type=\"field.type\"\r\n                :required=\"field.required\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div v-if=\"step === 3\">\r\n            <div class=\"input-group\">\r\n              <label for=\"notes\">Additional Notes</label>\r\n              <textarea id=\"notes\" v-model=\"form.notes\" placeholder=\"Optional details...\" />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"timestamp\">Registration Time</label>\r\n              <input id=\"timestamp\" :value=\"form.timestamp\" disabled />\r\n            </div>\r\n          </div>\r\n          <div class=\"navigation-buttons\">\r\n            <button type=\"button\" class=\"nav-btn\" @click=\"prevStep\" :disabled=\"step === 1\">← Previous</button>\r\n            <button v-if=\"step < 3\" type=\"button\" class=\"nav-btn\" @click=\"nextStep\">Next →</button>\r\n            <button\r\n              v-else\r\n              type=\"submit\"\r\n              class=\"register-btn\"\r\n              :disabled=\"!isFormComplete\"\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <p class=\"login-link\">\r\n          Already registered? <router-link to=\"/login\">Log in</router-link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"image-section\">\r\n      <img src=\"@/assets/images/Background.jpg\" alt=\"Register Visual\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'RegisterView',\r\n  data() {\r\n    return {\r\n      step: 1,\r\n      form: {\r\n        fullName: '',\r\n        idNumber: '',\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        address: '',\r\n        city: '',\r\n        houseNumber: '',\r\n        province: '',\r\n        notes: '',\r\n        timestamp: new Date().toLocaleString()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isFormComplete() {\r\n      return (\r\n        this.form.fullName &&\r\n        this.form.idNumber &&\r\n        this.form.email &&\r\n        this.form.password &&\r\n        this.form.phone &&\r\n        this.form.address &&\r\n        this.form.city &&\r\n        this.form.houseNumber &&\r\n        this.form.province\r\n      );\r\n    },\r\n    stepOneFields() {\r\n      return [\r\n        { id: 'fullName', label: 'Full Name', type: 'text', required: true },\r\n        { id: 'idNumber', label: 'ID Number', type: 'text', required: true },\r\n        { id: 'email', label: 'Email Address', type: 'email', required: true },\r\n        { id: 'password', label: 'Password', type: 'password', required: true },\r\n        { id: 'confirmPassword', label: 'Confirm Passowrd', type: 'password', required: true }\r\n      ];\r\n    },\r\n    stepTwoFields() {\r\n      return [\r\n        { id: 'phone', label: 'Primary Phone Number', type: 'tel', required: true },\r\n        { id: 'address', label: 'Street Address', type: 'text', required: true },\r\n        { id: 'city', label: 'City/Town', type: 'text', required: true },\r\n        { id: 'houseNumber', label: 'House Number', type: 'text', required: true },\r\n        { id: 'province', label: 'Province', type: 'text', required: true },\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    nextStep() {\r\n      if (this.step < 3) this.step++;\r\n    },\r\n    prevStep() {\r\n      if (this.step > 1) this.step--;\r\n    },\r\n    handleRegister() {\r\n      if (!this.isFormComplete) {\r\n        alert('Please fill all required fields.');\r\n        return;\r\n      }\r\n\r\n      alert(`Registration complete for ${this.form.fullName}!`);\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-page {\r\n  display: flex;\r\n  height: 100vh;\r\n  font-family: 'Inter', sans-serif;\r\n  background-image: url('@/assets/images/pattern.jpg');\r\n}\r\n\r\n.form-section {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f3f4f6;\r\n  padding: 40px;\r\n}\r\n\r\n.form-box {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: white;\r\n  padding: 40px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 12px 32px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-box h2 {\r\n  margin-bottom: 10px;\r\n  color: #1f2937;\r\n}\r\n\r\n.form-box p {\r\n  margin-bottom: 20px;\r\n  color: #6b7280;\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.input-group label {\r\n  margin-bottom: 6px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n}\r\n\r\n.input-group input,\r\ntextarea {\r\n  padding: 12px;\r\n  border: 1.5px solid #d1d5db;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  background: #fff;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  min-height: 80px;\r\n}\r\n\r\n.navigation-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.nav-btn {\r\n  padding: 10px 20px;\r\n  background: #e5e7eb;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n}\r\n\r\n.nav-btn:hover {\r\n  background: #d1d5db;\r\n}\r\n\r\n.register-btn {\r\n  padding: 10px 24px;\r\n  background: #10b981;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.register-btn:disabled {\r\n  background: #9ca3af;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.image-section {\r\n  flex: 1;\r\n  background: #d1fae5;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n}\r\n\r\n.image-section img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.login-link {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  font-size: 0.9rem;\r\n}\r\n.login-link a {\r\n  color: #10b981;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}