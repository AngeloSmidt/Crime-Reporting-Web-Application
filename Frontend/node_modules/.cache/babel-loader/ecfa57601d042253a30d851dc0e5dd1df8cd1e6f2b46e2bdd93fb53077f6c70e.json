{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-reports-view\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ViewReportsComp = _resolveComponent(\"ViewReportsComp\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ViewReportsComp, {\n    reports: $data.reports,\n    \"status-options\": $data.statusOptions,\n    onStatusSelected: $options.handleStatusSelected,\n    onAddToHistory: _ctx.handleAddToHistory\n  }, null, 8 /* PROPS */, [\"reports\", \"status-options\", \"onStatusSelected\", \"onAddToHistory\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_ViewReportsComp","reports","$data","statusOptions","onStatusSelected","$options","handleStatusSelected","onAddToHistory","_ctx","handleAddToHistory"],"sources":["C:\\Users\\Owen\\Desktop\\Github_Idea2\\Crime-Reporting-Web-Application\\frontend\\src\\pages\\AdminViewReports.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-reports-view\">\r\n    <ViewReportsComp \r\n      :reports=\"reports\" \r\n      :status-options=\"statusOptions\"\r\n      @status-selected=\"handleStatusSelected\"\r\n      @add-to-history=\"handleAddToHistory\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport ViewReportsComp from '../components/ViewReportscomp.vue'\r\n\r\nexport default {\r\n  components: {\r\n    ViewReportsComp,\r\n  },\r\n  data() {\r\n    return {\r\n      statusOptions: [\r\n        'Under Review',\r\n        'In Progress',\r\n        'Solved',\r\n        'False Alarm',\r\n        'Investigation',\r\n        'External'\r\n      ],\r\n      reports: [\r\n        { \r\n          id: 1,\r\n          title: 'Murder',\r\n          description: 'I found Elmo stabbed with multiple biscuit holes',\r\n          date: '2023-11-15 14:30',\r\n          status: 'Active',\r\n          author: 'Cookie Monster',\r\n          authorities: 'Police',\r\n          location: '125 Sesame Street'\r\n          \r\n        },\r\n        { \r\n          id: 2,\r\n          title: 'Kidnapping',\r\n          description: 'The vice president Joe Biden took my child',\r\n          date: '2023-11-14 09:15',\r\n          status: 'Investigating',\r\n          author: 'Obama',\r\n          authorities: 'Ambulance',\r\n          location: 'Area 51'\r\n        },\r\n        { \r\n          id: 3,\r\n          title: 'Break In',\r\n          description: 'My biggest fan Kanye broke in the White House',\r\n          date: '2023-11-13 03:45',\r\n          status: 'Pending',\r\n          author: 'Donald .T Duck',\r\n          authorities: 'Fire Department',\r\n          location: 'White House, Washington D.C.'\r\n        }\r\n      ],\r\n      loading : false,\r\n      error : null\r\n    };\r\n  },\r\n  methods: {\r\n  async fetchReports(){\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/reports');\r\n      this.reports = response.data;\r\n    } catch (err){\r\n      this.error = 'Failed to load reports';\r\n      console.error(err);\r\n    }\r\n  },\r\n\r\n    async handleStatusSelected({ reportId, status }) {\r\n      try {\r\n        await axios.patch(`http://localhost:3000/api/reports/${reportId}/status`, { status });\r\n        await this.fetchReports(); // Refresh reports after updating status\r\n      } catch (err) {\r\n        this.error = 'Failed to update status';\r\n        console.error(err);\r\n      }\r\n    },\r\n    },\r\n   async handleAddToHistory(reportId) {\r\n      try {\r\n        await axios.post(`http://localhost:3000/api/reports/${reportId}/history`);\r\n        await this.fetchReports(); // Refresh reports after adding to history\r\n      } catch (err) {\r\n        this.error = 'Failed to add report to history';\r\n        console.error(err);\r\n      }\r\n    },\r\n    async mounted() {\r\n    if (!localStorage.getItem('authToken')) {\r\n      this.$router.push('/login');\r\n      return;\r\n    }\r\n    await this.fetchReports(); // Fetch reports when the component is mounted\r\n  }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n.admin-reports-view {\r\n  padding: 2rem;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;;uBAA/BC,mBAAA,CAOM,OAPNC,UAOM,GANJC,YAAA,CAKEC,0BAAA;IAJCC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAChB,gBAAc,EAAEC,KAAA,CAAAC,aAAa;IAC7BC,gBAAe,EAAEC,QAAA,CAAAC,oBAAoB;IACrCC,cAAc,EAAEC,IAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}