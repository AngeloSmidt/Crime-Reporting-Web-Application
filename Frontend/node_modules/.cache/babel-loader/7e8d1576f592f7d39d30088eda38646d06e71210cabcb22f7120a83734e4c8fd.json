{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AdminLoginComp',\n  data() {\n    return {\n      username: '',\n      password: '',\n      loginError: '',\n      isLoading: false\n    };\n  },\n  mounted() {\n    // Check if the user is already logged in\n    if (localStorage.getItem('token')) {\n      this.$router.push('/admin/dashboard'); // Redirect to dashboard if logged in\n    }\n  },\n  methods: {\n    async handleAdminLogin() {\n      this.loginError = ''; // Reset error message\n      this.isLoading = true; // Set loading state\n\n      // Hardcoded validation\n      const validUser = {\n        username: \"admin\",\n        password: \"admin123\"\n      };\n      if (this.username !== validUser.username || this.password !== validUser.password) {\n        this.loginError = 'Invalid username or password. Please try again.';\n        this.isLoading = false; // Reset loading state\n        return;\n      }\n      console.log(\"Attempting admin login with:\", this.username, this.password);\n      try {\n        // Simulate a successful login response\n        const response = await axios.post('http://localhost:3000/adminlogin', {\n          username: this.username,\n          password: this.password\n        });\n\n        // Assuming the server returns a token on successful login\n        if (response.data.token) {\n          localStorage.setItem('token', response.data.token); // Store the token\n          this.$router.push('/admin/dashboard'); // Redirect to dashboard\n        } else {\n          this.loginError = 'Login failed. Please try again.';\n        }\n      } catch (err) {\n        console.error('Admin login error:', err);\n        if (err.response && err.response.data && err.response.data.message) {\n          this.loginError = err.response.data.message;\n        } else {\n          this.loginError = 'Something went wrong. Please try again.';\n        }\n      } finally {\n        this.isLoading = false; // Reset loading state\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","password","loginError","isLoading","mounted","localStorage","getItem","$router","push","methods","handleAdminLogin","validUser","console","log","response","post","token","setItem","err","error","message"],"sources":["C:\\Users\\Owen\\Desktop\\Github_Idea2\\Crime-Reporting-Web-Application\\frontend\\src\\components\\AdminLogincomp.vue"],"sourcesContent":["<!-- AdminLoginComp.vue -->\r\n<template>\r\n  <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Username:</label>\r\n      <input type=\"text\" id=\"username\" v-model=\"username\" required aria-label=\"Username\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" required aria-label=\"Password\">\r\n    </div>\r\n    <p class=\"forgot-password\"><a href=\"#\">Forgot Password?</a></p>\r\n    <div class=\"button-container\">\r\n      <button type=\"submit\" :disabled=\"isLoading\">{{ isLoading ? 'Logging in...' : 'Login' }}</button>\r\n    </div>\r\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n  </form>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AdminLoginComp',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      loginError: '',\r\n      isLoading: false\r\n    };\r\n  },\r\n  mounted() {\r\n    // Check if the user is already logged in\r\n    if (localStorage.getItem('token')) {\r\n      this.$router.push('/admin/dashboard'); // Redirect to dashboard if logged in\r\n    }\r\n  },\r\n  methods: {\r\n    async handleAdminLogin() {\r\n      this.loginError = ''; // Reset error message\r\n      this.isLoading = true; // Set loading state\r\n\r\n      // Hardcoded validation\r\n      const validUser  = {\r\n        username: \"admin\",\r\n        password: \"admin123\"\r\n      };\r\n\r\n      if (this.username !== validUser .username || this.password !== validUser .password) {\r\n        this.loginError = 'Invalid username or password. Please try again.';\r\n        this.isLoading = false; // Reset loading state\r\n        return;\r\n      }\r\n\r\n      console.log(\"Attempting admin login with:\", this.username, this.password);\r\n\r\n      try {\r\n        // Simulate a successful login response\r\n        const response = await axios.post('http://localhost:3000/adminlogin', {\r\n          username: this.username,\r\n          password: this.password\r\n        });\r\n\r\n        // Assuming the server returns a token on successful login\r\n        if (response.data.token) {\r\n          localStorage.setItem('token', response.data.token); // Store the token\r\n          this.$router.push('/admin/dashboard'); // Redirect to dashboard\r\n        } else {\r\n          this.loginError = 'Login failed. Please try again.';\r\n        }\r\n      } catch (err) {\r\n        console.error('Admin login error:', err);\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n          this.loginError = err.response.data.message;\r\n        } else {\r\n          this.loginError = 'Something went wrong. Please try again.';\r\n        }\r\n      } finally {\r\n        this.isLoading = false; // Reset loading state\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n*{\r\n  font-size: 1rem;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%; /* Full width of the container */\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n  width: 100%; /* Ensure full width for form groups */\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"password\"] {\r\n  width: 100%; /* Full width */\r\n  padding: 12px; /* Increase padding for better touch targets */\r\n  background-color: #B1AFB2;\r\n  border: 1px solid #1D1B20;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton { \r\n  width: 100%; /* Full width */\r\n  padding: 12px; /* Increase padding for better touch targets */\r\n  background-color: #2D2C2D; /* Change button color to black */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #222; /* Darker shade on hover */\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.forgot-password {\r\n  margin-top: 10px;\r\n  text-align: right;\r\n}\r\n\r\n.forgot-password a {\r\n  color: #007bff; /* Link color */\r\n  text-decoration: none; /* Remove underline */\r\n}\r\n\r\n.forgot-password a:hover {\r\n  text-decoration: underline; /* Underline on hover */\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* Media Queries for AdminLoginComp */\r\n@media (max-width: 600px) {\r\n  input[type=\"text\"],\r\n  input[type=\"password\"] {\r\n    padding: 10px; /* Adjust padding for smaller screens */\r\n  }\r\n\r\n  button {\r\n    padding: 10px; /* Adjust button padding */\r\n  }\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MACjC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC,EAAE;IACzC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI,CAACR,UAAS,GAAI,EAAE,EAAE;MACtB,IAAI,CAACC,SAAQ,GAAI,IAAI,EAAE;;MAEvB;MACA,MAAMQ,SAAQ,GAAK;QACjBX,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE;MACZ,CAAC;MAED,IAAI,IAAI,CAACD,QAAO,KAAMW,SAAQ,CAAGX,QAAO,IAAK,IAAI,CAACC,QAAO,KAAMU,SAAQ,CAAGV,QAAQ,EAAE;QAClF,IAAI,CAACC,UAAS,GAAI,iDAAiD;QACnE,IAAI,CAACC,SAAQ,GAAI,KAAK,EAAE;QACxB;MACF;MAEAS,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAACb,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;MAEzE,IAAI;QACF;QACA,MAAMa,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,kCAAkC,EAAE;UACpEf,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACA,IAAIa,QAAQ,CAACf,IAAI,CAACiB,KAAK,EAAE;UACvBX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACf,IAAI,CAACiB,KAAK,CAAC,EAAE;UACpD,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC,EAAE;QACzC,OAAO;UACL,IAAI,CAACN,UAAS,GAAI,iCAAiC;QACrD;MACF,EAAE,OAAOgB,GAAG,EAAE;QACZN,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAED,GAAG,CAAC;QACxC,IAAIA,GAAG,CAACJ,QAAO,IAAKI,GAAG,CAACJ,QAAQ,CAACf,IAAG,IAAKmB,GAAG,CAACJ,QAAQ,CAACf,IAAI,CAACqB,OAAO,EAAE;UAClE,IAAI,CAAClB,UAAS,GAAIgB,GAAG,CAACJ,QAAQ,CAACf,IAAI,CAACqB,OAAO;QAC7C,OAAO;UACL,IAAI,CAAClB,UAAS,GAAI,yCAAyC;QAC7D;MACF,UAAU;QACR,IAAI,CAACC,SAAQ,GAAI,KAAK,EAAE;MAC1B;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}