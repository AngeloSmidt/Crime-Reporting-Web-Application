{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  inheritAttrs: false,\n  props: {\n    reports: {\n      type: Array,\n      required: true\n    },\n    statusOptions: {\n      type: Array,\n      required: true\n    },\n    reportId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const selectedStatuses = ref({});\n    const selectStatus = (reportId, status) => {\n      // Toggle selection\n      if (selectedStatuses.value[reportId] === status) {\n        delete selectedStatuses.value[reportId];\n      } else {\n        selectedStatuses.value[reportId] = status;\n      }\n\n      // Reactivity is preserved with ref's reactivity system\n      selectedStatuses.value = {\n        ...selectedStatuses.value\n      };\n\n      // Emit event to parent\n      emit('status-selected', {\n        reportId,\n        status: selectedStatuses.value[reportId] || null\n      });\n    };\n    const emitAddToHistory = reportId => {\n      emit('add-to-history', reportId);\n    };\n    return {\n      selectedStatuses,\n      selectStatus,\n      emitAddToHistory\n    };\n  }\n};","map":{"version":3,"names":["ref","inheritAttrs","props","reports","type","Array","required","statusOptions","reportId","String","setup","emit","selectedStatuses","selectStatus","status","value","emitAddToHistory"],"sources":["C:\\Users\\Owen\\Desktop\\Github_Idea2\\Crime-Reporting-Web-Application\\frontend\\src\\components\\ViewReportscomp.vue"],"sourcesContent":["<template>\r\n  <div class=\"reports-component\">\r\n    <h1>Reports</h1>\r\n    <div v-if=\"$attrs.loading\" class=\"loading\">loading...</div>\r\n    <div v-else-if=\"$attrs.error\" class=\"error\">{{ $attrs.error }}</div>\r\n    <div class=\"cards-container\">\r\n      <div class=\"report-card\" v-for=\"report in reports\" :key=\"report.id\">\r\n        <div class=\"card-header\">\r\n          <h2>{{ report.title }}</h2>\r\n          <span class=\"badge\">{{ report.status || 'New' }}</span>\r\n        </div>\r\n        <div class=\"meta-data\">\r\n          <span class=\"date\">{{ report.date }}</span>\r\n          <span class=\"divider\">â€¢</span>\r\n          <span class=\"author\">{{ report.author || 'System' }}</span>\r\n        </div>\r\n        \r\n        <p class=\"description\">Description: <br>{{ report.description }}</p>\r\n        <p class=\"authorities\">Authorities: {{report.authorities}}</p>\r\n        <p class=\"location\">Location: {{report.location}}</p>\r\n        \r\n        \r\n        <div class=\"status-grid\">\r\n          <button\r\n            v-for=\"status in statusOptions\"\r\n            :key=\"status\"\r\n            @click=\"selectStatus(report.id, status)\"\r\n            :class=\"{\r\n              'status-btn': true,\r\n              'selected': selectedStatuses[report.id] === status\r\n            }\"\r\n          >\r\n            {{ status }}\r\n          </button>\r\n        </div>\r\n        \r\n        <button \r\n          class=\"history-btn\"\r\n          @click=\"emitAddToHistory(report.id)\"\r\n        >\r\n          Add to Report History\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  inheritAttrs: false,\r\n  props: {\r\n    reports: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    statusOptions: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    reportId: {\r\n      type: String,\r\n      required: true,\r\n    }\r\n  },\r\n  setup(props, { emit }) {\r\n    const selectedStatuses = ref({});\r\n\r\n    const selectStatus = (reportId, status) => {\r\n      // Toggle selection\r\n      if (selectedStatuses.value[reportId] === status) {\r\n        delete selectedStatuses.value[reportId];\r\n      } else {\r\n        selectedStatuses.value[reportId] = status;\r\n      }\r\n      \r\n      // Reactivity is preserved with ref's reactivity system\r\n      selectedStatuses.value = {...selectedStatuses.value};\r\n\r\n      // Emit event to parent\r\n      emit('status-selected', {\r\n        reportId,\r\n        status: selectedStatuses.value[reportId] || null\r\n      });\r\n    };\r\n\r\n    const emitAddToHistory = (reportId) => {\r\n      emit('add-to-history', reportId);\r\n    };\r\n\r\n    return {\r\n      selectedStatuses,\r\n      selectStatus,\r\n      emitAddToHistory\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reports-component {\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.cards-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\r\n  gap: 1.8rem;\r\n}\r\n\r\n.report-card {\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.08);\r\n  overflow: hidden;\r\n  transition: all 0.25s ease;\r\n  padding: 1.8rem;\r\n  border: 1px solid #eaeaea;\r\n}\r\n\r\n.report-card:hover {\r\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.12);\r\n  transform: translateY(-3px);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.card-header h2 {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: #1a1a1a;\r\n  margin: 0;\r\n}\r\n\r\n.badge {\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 12px;\r\n  background: #e3f2fd;\r\n  color: #1976d2;\r\n  font-weight: 500;\r\n}\r\n\r\n.description {\r\n  color: #555;\r\n  line-height: 1.5;\r\n  margin-bottom: 1.5rem;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.meta-data {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 0.85rem;\r\n  color: #666;\r\n  margin-bottom: 2rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.location {\r\n  color: #555;\r\n  line-height: 1.5;\r\n  margin-bottom: 1.5rem;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.authorities {\r\n  color: #555;\r\n  line-height: 1.5;\r\n  margin-bottom: 1.5rem;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.divider {\r\n  color: #ccc;\r\n}\r\n\r\n.status-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n  gap: 0.6rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.status-btn {\r\n  padding: 0.7rem;\r\n  border: 1px solid #e0e0e0;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 0.85rem;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n  color: #424242;\r\n  text-align: center;\r\n}\r\n\r\n.status-btn:hover {\r\n  background: #f5f5f5;\r\n}\r\n\r\n.status-btn.selected {\r\n  background: #000;\r\n  color: white;\r\n  border-color: #000;\r\n}\r\n\r\n.history-btn {\r\n  width: 100%;\r\n  padding: 0.85rem;\r\n  background: #f5f5f5;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n  color: #424242;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.history-btn:hover {\r\n  background: #e0e0e0;\r\n}\r\n</style>\r\n\r\n"],"mappings":"AAgDA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,aAAa,EAAE;MACbH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDE,QAAQ,EAAE;MACRJ,IAAI,EAAEK,MAAM;MACZH,QAAQ,EAAE;IACZ;EACF,CAAC;EACDI,KAAKA,CAACR,KAAK,EAAE;IAAES;EAAK,CAAC,EAAE;IACrB,MAAMC,gBAAe,GAAIZ,GAAG,CAAC,CAAC,CAAC,CAAC;IAEhC,MAAMa,YAAW,GAAIA,CAACL,QAAQ,EAAEM,MAAM,KAAK;MACzC;MACA,IAAIF,gBAAgB,CAACG,KAAK,CAACP,QAAQ,MAAMM,MAAM,EAAE;QAC/C,OAAOF,gBAAgB,CAACG,KAAK,CAACP,QAAQ,CAAC;MACzC,OAAO;QACLI,gBAAgB,CAACG,KAAK,CAACP,QAAQ,IAAIM,MAAM;MAC3C;;MAEA;MACAF,gBAAgB,CAACG,KAAI,GAAI;QAAC,GAAGH,gBAAgB,CAACG;MAAK,CAAC;;MAEpD;MACAJ,IAAI,CAAC,iBAAiB,EAAE;QACtBH,QAAQ;QACRM,MAAM,EAAEF,gBAAgB,CAACG,KAAK,CAACP,QAAQ,KAAK;MAC9C,CAAC,CAAC;IACJ,CAAC;IAED,MAAMQ,gBAAe,GAAKR,QAAQ,IAAK;MACrCG,IAAI,CAAC,gBAAgB,EAAEH,QAAQ,CAAC;IAClC,CAAC;IAED,OAAO;MACLI,gBAAgB;MAChBC,YAAY;MACZG;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}